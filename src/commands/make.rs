use std::{fs::{self, File}, io::Write};
use crate::{commands::list::PinkColor, config, Arguments, UKI_FOLDER};

#[allow(dead_code)]
const DEFAULT_CONFIG: &str = r#"# generated by uki | https://github.com/smokingplaya/uki
name: example script
description: example script, automaticly generated by uki
authors: ["uki", "smokingplaya"]
runner: powershell

presets:
    # $ uki
    default:
        execute:
        - ls
        - clear
        - echo "uki is the best!"

    # $ uki example dev
    example:
        arguments: ["type"]
        execute: ["npm run $type"]

    # $ uki test
    test:
        execute: ["node test.ts"]
"#;

pub fn execute(_: Arguments) {
    let config = config::get(false);

    match config {
        Some(_) => println!("Config already exists!"),
        None => {
            let _ = fs::create_dir(UKI_FOLDER);

            let config_file = File::create(config::get_path());

            if let Ok(mut config) = config_file {
                let _ = config.write_all(DEFAULT_CONFIG.as_bytes());

                return
            }

            println!("Unable to write data to config: {}", &config_file.err().unwrap().to_string().accent());
        }
    }
}